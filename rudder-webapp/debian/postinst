#!/bin/sh
# postinst script for rudder-inventory-ldap
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)

  # Currently, we assume that the server where the webapp is installed
  # is the root server. Force the UUID.
  echo 'root' > /opt/rudder/etc/uuid.hive

  echo -n "INFO: Restarting syslog..."
  invoke-rc.d rsyslog restart >/dev/null 2>&1
  echo "Done"

  # Get the current apache version
  APACHE_VERSION=$(apache2 -v|grep Apache|sed "s%^.*Apache/\([0-9].[0-9]\).*%\1%")

  SITES_TO_DISABLE="default 000-default default-ssl rudder-default rudder-default-ssl"
  SITES_TO_ENABLE="rudder-vhost rudder-vhost-ssl"

  MODULES_TO_ENABLE="dav_fs rewrite proxy_http headers ssl"

  # Migration: Clean up old vhosts if we are running Apache 2.4
  if [ ${APACHE_VERSION} = 2.4 ]
  then
    for i in ${SITES_TO_ENABLE}
    do
      [ ! -e /etc/apache2/sites-enabled/${i} ] || rm -f /etc/apache2/sites-enabled/${i}
    done
  fi

  for dissite in ${SITES_TO_DISABLE}
  do
    a2dissite ${dissite} >/dev/null 2>&1 || true
  done

  for ensite in ${SITES_TO_ENABLE}
  do
    a2ensite ${ensite} >/dev/null 2>&1
  done

  for enmod in ${MODULES_TO_ENABLE}
  do
    a2enmod ${enmod} >/dev/null 2>&1
  done

  # Add right to apache user to access /var/rudder/inventories/incoming
  chmod 751 /var/rudder/inventories
  chown root:www-data /var/rudder/inventories/incoming
  chmod 2770 /var/rudder/inventories/incoming
  chown root:www-data /var/rudder/inventories/accepted-nodes-updates
  chmod 2770 /var/rudder/inventories/accepted-nodes-updates
  chmod 755 -R /opt/rudder/share/tools

  htpasswd -bc /opt/rudder/etc/htpasswd-webdav-initial rudder rudder >/dev/null 2>&1
  htpasswd -bc /opt/rudder/etc/htpasswd-webdav rudder rudder >/dev/null 2>&1

  # Move old virtual hosts out of the way
  for OLD_VHOST in rudder-default rudder-default-ssl; do
    if [ -f /etc/apache2/sites-available/${OLD_VHOST} ]; then
      echo -n "INFO: An old rudder virtual host file has been detected (${OLD_VHOST}), it will be moved to /var/backups."
      mkdir -p /var/backups
      mv /etc/apache2/sites-available/${OLD_VHOST} /var/backups/${OLD_VHOST}-$(date +%s)
      echo " Done"
    fi
  done

  # Generate the SSL certificates if needed
  if [ ! -f /opt/rudder/etc/ssl/rudder-webapp.crt ] || [ ! -f /opt/rudder/etc/ssl/rudder-webapp.key ]; then
    echo -n "INFO: No usable SSL certificate detected for Rudder HTTP/S support, generating one automatically..."
    openssl req -new -x509 -newkey rsa:2048 -subj "/CN=$(hostname --fqdn)/" -keyout /opt/rudder/etc/ssl/rudder-webapp.key -out /opt/rudder/etc/ssl/rudder-webapp.crt -days 1460 -nodes -sha256 >/dev/null 2>&1
    chgrp www-data /opt/rudder/etc/ssl/rudder-webapp.key && chmod 640 /opt/rudder/etc/ssl/rudder-webapp.key
    echo " Done"
  fi

  echo -n "INFO: Restarting Apache HTTPd..."
  /etc/init.d/apache2 restart >/dev/null 2>&1
  echo " Done"

  # Run any upgrades
  # Note this must happen *before* creating the technique store, as it was moved in version 2.3.2
  # and creating it manually would break the upgrade logic
  echo "INFO: Launching script to check if a migration is needed"
  /opt/rudder/bin/rudder-upgrade
  echo "INFO: End of migration script"

  # Create and populate technique store
  if [ ! -d /var/rudder/configuration-repository ]; then mkdir -p /var/rudder/configuration-repository; fi
  if [ ! -d /var/rudder/configuration-repository/shared-files ]; then mkdir -p /var/rudder/configuration-repository/shared-files; fi
  if [ ! -d /var/rudder/configuration-repository/techniques ]; then
    cp -a /opt/rudder/share/techniques /var/rudder/configuration-repository/
  fi
  if [ ! -d /var/rudder/configuration-repository/ncf ]; then
    ncf init /var/rudder/configuration-repository/ncf
  fi

  # Go into configuration-repository to manage git
  cd /var/rudder/configuration-repository
  # Initialize git repository if it is missing, so permissions can be set on it afterwards
  if [ ! -d /var/rudder/configuration-repository/.git ]; then

    git init --shared=group

    # Specify default git user name and email (git will refuse to commit without them)
    git config user.name "root user (CLI)"
    git config user.email "root@localhost"

    git add .
    git commit -m "initial commit"

  else

    # This should have been set during repository initialization, but might need to be
    # added if we are upgrading an existing repository
    if [ $(git config --get-regexp "user.name|user.email"|wc -l) -ne 2 ]; then
      git config user.name "root user (CLI)"
      git config user.email "root@localhost"
    fi

    # Set shared repository value to group if not set
    if ! git config core.sharedRepository >/dev/null 2>&1; then
      git config core.sharedRepository group
    fi
  fi

  # Create the configuration-repository group if it does not exist
  if ! getent group rudder > /dev/null; then
    echo -n "INFO: Creating group rudder..."
    groupadd --system rudder
    echo " Done"
  fi

  # Add the ncf-api-venv user to this group
  if ! getent group rudder | grep -q ncf-api-venv > /dev/null; then
    echo -n "INFO: Adding ncf-api-venv to the rudder group..."
    usermod -aG rudder ncf-api-venv
    echo " Done"
  fi

  # Adjust permissions on /var/rudder/configuration-repository
  chgrp -R rudder /var/rudder/configuration-repository
  ## Add execution permission for ncf-api only on directories and files with user execution permission
  chmod -R u+rwX,g+rwsX /var/rudder/configuration-repository/.git
  chmod -R u+rwX,g+rwsX /var/rudder/configuration-repository/ncf
  chmod -R u+rwX,g+rwsX /var/rudder/configuration-repository/techniques
  ## Add execution permission for ncf-apo on pre/post-hooks
  chmod -R 2750 /var/rudder/configuration-repository/ncf/ncf-hooks.d/


  # Only for Ubuntu:
  ## Change rsyslog port number since Ubuntu 12.04 doesn't allow to use standard
  ## rsyslog port number (https://bugs.launchpad.net/ubuntu/+source/rsyslog/+bug/789174)
  CHECK_DIST=`/usr/bin/lsb_release -is`
  CHECK_UBUNTU_VERSION=`/usr/bin/lsb_release -rs | cut -d. -f1`
  CHECK_RSYSLOG_PORT=`grep -E "^rudder.syslog.port\s*=\s*[0-9]+\s*$" /opt/rudder/etc/rudder-web.properties | cut -d "=" -f2`
  if [ "z${CHECK_DIST}" = "zUbuntu" -a ${CHECK_UBUNTU_VERSION} -ge 12 -a ${CHECK_RSYSLOG_PORT} -lt 1024 ]; then
    echo "INFO: Since Ubuntu 12.04, rsyslog port number used by Rudder needs to be >1024"
    sed -i "s/^rudder.syslog.port\w*=.*$/rudder.syslog.port=5514/" /opt/rudder/etc/rudder-web.properties
    echo "INFO: rsyslog port number changed to 5514"
  fi


  # Create a symlink to the Jetty context if necessary
  if [ -d "/opt/rudder/jetty7/contexts" ]; then
    ln -sf /opt/rudder/share/webapps/rudder.xml /opt/rudder/jetty7/contexts/rudder.xml
  fi

  # Restart the webapp
  echo -n "INFO: Restarting Rudder webapp and inventory-endpoint..."
  if [ /etc/init.d/rudder-jetty check >/dev/null 2>&1 ];then
    /etc/init.d/rudder-jetty start >/dev/null 2>&1
  else
    /etc/init.d/rudder-jetty restart >/dev/null 2>&1 || echo -n "WARNING: Jetty failed to start, maybe there is not enough RAM or swap on the machine. Skipping... "
  fi
  echo " Done"

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
