From f3cc371054f244e8e862da6a19ff4cdf0420e024 Mon Sep 17 00:00:00 2001
From: Nicolas Charles <nicolas.charles@normation.com>
Date: Thu, 15 Sep 2016 12:42:41 +0200
Subject: [PATCH] Fixes #3047: correct Rudder detection on Windows and detect
 server roles

---
 lib/FusionInventory/Agent/Inventory.pm             |   2 +-
 .../Agent/Task/Inventory/Generic/Rudder.pm         | 139 +++++++++++++++++++++
 2 files changed, 140 insertions(+), 1 deletion(-)
 create mode 100644 lib/FusionInventory/Agent/Task/Inventory/Generic/Rudder.pm

diff --git a/lib/FusionInventory/Agent/Inventory.pm b/lib/FusionInventory/Agent/Inventory.pm
index 0d6b285..849fda6 100644
--- a/lib/FusionInventory/Agent/Inventory.pm
+++ b/lib/FusionInventory/Agent/Inventory.pm
@@ -38,7 +38,7 @@ my %fields = (
     PORTS       => [ qw/CAPTION DESCRIPTION NAME TYPE/ ],
     PROCESSES   => [ qw/USER PID CPUUSAGE MEM VIRTUALMEMORY TTY STARTED CMD/ ],
     REGISTRY    => [ qw/NAME REGVALUE HIVE/ ],
-    RUDDER      => [ qw/AGENT UUID HOSTNAME/ ],
+    RUDDER      => [ qw/AGENT UUID HOSTNAME SERVER_ROLES/ ],
     SLOTS       => [ qw/DESCRIPTION DESIGNATION NAME STATUS/ ],
     SOFTWARES   => [ qw/COMMENTS FILESIZE FOLDER FROM HELPLINK INSTALLDATE NAME
                         NO_REMOVE RELEASE_TYPE PUBLISHER UNINSTALL_STRING
diff --git a/lib/FusionInventory/Agent/Task/Inventory/Generic/Rudder.pm b/lib/FusionInventory/Agent/Task/Inventory/Generic/Rudder.pm
new file mode 100644
index 0000000..4f963e7
--- /dev/null
+++ b/lib/FusionInventory/Agent/Task/Inventory/Generic/Rudder.pm
@@ -0,0 +1,139 @@
+package FusionInventory::Agent::Task::Inventory::Generic::Rudder;
+
+use strict;
+use warnings;
+
+use English qw(-no_match_vars);
+
+use FusionInventory::Agent::Tools;
+
+sub isEnabled {
+    return -r getUuidFile();
+}
+
+sub getUuidFile {
+    return (($OSNAME eq 'MSWin32') ? 'C:\Program Files\Rudder\etc\uuid.hive' : '/opt/rudder/etc/uuid.hive');
+}
+
+sub doInventory {
+    my (%params) = @_;
+
+    my $inventory    = $params{inventory};
+    my $logger       = $params{logger};
+
+    my $uuid_hive = getUuidFile();
+
+    # Get Rudder UUID
+    my $Uuid = getFirstLine(
+        logger => $logger, file => $uuid_hive
+    );
+    # Get all agents running on that machine
+    my @agents = _manageAgent(
+        logger => $logger
+    );
+    # Get machine hostname
+    my $command = $OSNAME eq 'linux' ? 'hostname --fqdn' : 'hostname';
+    my $hostname = getFirstLine(
+        logger => $logger, command => $command
+    );
+    # Get server roles
+    my @serverRoles = _listServerRoles();
+
+    my $rudder = {
+        HOSTNAME => $hostname,
+        UUID => $Uuid,
+        AGENT => \@agents,
+        SERVER_ROLES => { SERVER_ROLE => \@serverRoles },
+    };
+
+    $inventory->addEntry(
+        section => 'RUDDER', entry => $rudder
+    );
+}
+
+sub _listServerRoles {
+    my $server_roles_dir = ($OSNAME eq 'MSWin32') ? 'C:\Program Files\Rudder\etc\server-roles.d' : '/opt/rudder/etc/server-roles.d';
+    my @server_roles;
+
+    if (-d "$server_roles_dir") {
+        opendir(DIR, $server_roles_dir); # or die $!;
+
+        while (my $file = readdir(DIR)) {
+            # Use a regular expression to ignore files beginning with a period
+            next if ($file =~ m/^\./);
+            push @server_roles, $file;
+        }
+        closedir(DIR);
+    }
+    return @server_roles;
+}
+
+sub _manageAgent {
+    my %params = @_;
+    my $logger = $params{logger};
+    my @agents;
+	
+    # Potential agent directory candidates
+    my %agent_candidates = ( '/var/rudder/cfengine-community' => 'cfengine-community',
+                             '/var/cfengine'                  => 'cfengine-nova',
+                             'C:/Program Files/Cfengine'      => 'cfengine-nova',
+                           );
+
+    foreach my $candidate (keys(%agent_candidates)){
+
+        # Verify if the candidate is installed and configured
+        next unless ( -e "${candidate}/policy_server.dat" );
+
+        # Get a list of useful file paths to key Rudder components
+        my $agent_name           = "$agent_candidates{${candidate}}";
+        my $server_hostname_file = "${candidate}/policy_server.dat";
+        my $uuid_file            = "${candidate}/rudder-server-uuid.txt";
+        my $cfengine_key_file    = "${candidate}/ppkeys/localhost.pub";
+		
+        # get policy server hostname
+        my $serverHostname = getFirstLine (
+            logger => $logger,
+            file   => $server_hostname_file
+        );
+        chomp $serverHostname;
+
+        # Get the policy server UUID
+        #
+        # The default file is no longer /var/rudder/tmp/uuid.txt since the
+        # change in http://www.rudder-project.org/redmine/issues/2443.
+        # We gracefully fallback to the old default if the new file cannot
+        # be found.
+        my $serverUuid = getFirstLine (
+            logger => $logger,
+            file => ( -e "$uuid_file" ) ? $uuid_file : "/var/rudder/tmp/uuid.txt"
+        );
+        chomp $serverUuid;
+
+        # get CFengine public key
+        my $cfengineKey = getAllLines(
+            file => $cfengine_key_file
+        );
+
+        # get owner name
+        my $owner = getFirstLine (
+            logger => $logger,
+            command => 'whoami'
+        );
+
+        # build agent from datas
+        my $agent = {
+            AGENT_NAME             => $agent_name,
+            POLICY_SERVER_HOSTNAME => $serverHostname,
+            CFENGINE_KEY           => $cfengineKey,
+            OWNER                  => $owner,
+            POLICY_SERVER_UUID     => $serverUuid,
+        };
+
+        push @agents, $agent;
+
+    }
+
+    return @agents;
+}
+
+1;
-- 
1.9.1

