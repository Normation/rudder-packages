commit ac6df1cb0372770e174a0641cb416e3dbbf81724
Author: Matthieu CERDA <matthieu.cerda@normation.com>
Date:   Fri May 23 15:39:20 2014 +0200

    Closes #2527: Fix duplicate AIX network interfaces

diff --git a/lib/FusionInventory/Agent/Task/Inventory/AIX/Networks.pm b/lib/FusionInventory/Agent/Task/Inventory/AIX/Networks.pm
index 7640460..edfa552 100644
--- a/lib/FusionInventory/Agent/Task/Inventory/AIX/Networks.pm
+++ b/lib/FusionInventory/Agent/Task/Inventory/AIX/Networks.pm
@@ -43,15 +43,25 @@ sub _getInterfaces {
 
     # get a first list of interfaces objects from lscfg
     my @interfaces = _parseLscfg(
-        command => 'lscfg -v -l en*',
+        command => 'lscfg -v -l ent*',
         logger  => $logger
     );
 
+    my @interfaces_ifconfig;
     # complete with empty interfaces objects from ifconfig
-    push @interfaces,
+    # in another list
+    push @interfaces_ifconfig,
         map { { DESCRIPTION => $_ } }
         split(/ /, getFirstLine(command => 'ifconfig -l'));
 
+    # merge the two lists, making sure there is no duplicated
+    # interfaces in the final result
+    foreach my $interface (@interfaces_ifconfig) {
+        if ( _searchDescription($interface, \@interfaces) ) {
+            push @interfaces, $interface;
+        }
+    }
+
     foreach my $interface (@interfaces) {
         my $handle = getFileHandle(
             command => "lsattr -E -l $interface->{DESCRIPTION}",
@@ -83,6 +93,22 @@ sub _getInterfaces {
     return @interfaces;
 }
 
+# search for an interface description in a list
+# if found => return 0
+# if not   => return 1
+sub _searchDescription {
+
+    my $element = shift;
+    my $list    = shift;
+
+    foreach my $entry (@$list) {
+        if ( $element->{DESCRIPTION} eq $entry->{DESCRIPTION}) {
+            return 0;
+        }
+    }
+    return 1;
+}
+
 sub _parseLscfg {
     my $handle = getFileHandle(@_);
     return unless $handle;
