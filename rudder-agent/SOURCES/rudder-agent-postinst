#!/bin/sh
set -e

CFRUDDER_FIRST_INSTALL="$1"
CFRUDDER_OS="$2"
CFRUDDER_USE_SYSTEMD="$3"
CFRUDDER_SERVER="$4"

CFE_DIR="/var/rudder/cfengine-community"
RUDDER_CMD="/opt/rudder/bin/rudder"
LOG_FILE="/var/log/rudder/install/rudder-agent-$(date +%Y%m%d%H%M%S).log"

# Closing all parents fd which are inherited, otherwise it can lead to
# a postinst unable to terminate (relevant at least on debian 7)
if [ -d /proc/self/fd ] && [ "$(uname -s)" != "SunOS" ]
then
  for f in /proc/self/fd/*; do
    fd=$(basename "${f}")
    # posix shell doesn't support 2 digits fd
    if [ "$fd" -gt 2 ] && [ "$fd" -lt 10 ]
    then
      eval "exec $fd>&-"
    fi
  done
fi

if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]
then
  echo "Usage: $0 <CFRUDDER_FIRST_INSTALL> <CFRUDDER_OS> <CFRUDDER_USE_SYSTEMD>"
  echo " This should only be called from a package postinstall command"
  echo " CFRUDDER_OS: currently ignored"
  exit 1
fi

echo "$(date) - Starting rudder-agent post installation script" >> ${LOG_FILE}

if [ "${CFRUDDER_USE_SYSTEMD}" = "true" ]
then
  /bin/systemctl daemon-reload
fi

# if no conf and no server provided, try to use rudder
if [ ! -f /var/rudder/cfengine-community/policy_server.dat ] && [ "${CFRUDDER_SERVER}" = "" ]
then
  # Detect if "rudder" is a valid hostname, if so, use it as the default server
  if type getent > /dev/null 2>&1; then # glibc/linux
    if getent hosts rudder > /dev/null; then
      CFRUDDER_SERVER="rudder"
    fi
  elif type host > /dev/null 2>&1; then # aix
    if host rudder > /dev/null 2>&1; then
      CFRUDDER_SERVER="rudder"
    fi
  fi

  if [ "${CFRUDDER_SERVER}" = "rudder" ]
  then
    echo "********************************************************************************"
    echo "Policy server set to 'rudder' by default as it was resolvable"
    echo "To change it, update the policy-server with your Rudder server's hostname"
    echo "and send an inventory to newly configured policy server."
    echo ""
    echo "# rudder agent policy-server <ip or hostname of the server>"
    echo "# rudder agent inventory"
    echo "********************************************************************************"
  fi
fi

# setup the policy server if we are asked to
if [ "${CFRUDDER_SERVER}" != "" ]
then
  echo "${CFRUDDER_SERVER}" > /var/rudder/cfengine-community/policy_server.dat
fi

# Copy CFEngine binaries
cp -r -f /opt/rudder/bin/cf-* ${CFE_DIR}/bin/
cp -r -f /opt/rudder/bin/rpmvercmp ${CFE_DIR}/bin/

# Setup service at first install
if [ "${CFRUDDER_FIRST_INSTALL}" = "true" ]
then
  # Set rudder-agent as service on OS that are not packaged to do it
  if [ "${CFRUDDER_USE_SYSTEMD}" = "true" ]
  then
    /bin/systemctl enable rudder-agent rudder-cf-execd rudder-cf-serverd >/dev/null 2>&1
  elif [ -x /usr/bin/mkssys ] # AIX
  then
    /usr/bin/mkssys -s rudder-agent -p "${CFE_DIR}/bin/cf-execd" -a "-F" -u root -S -n15 -f9 -R
    /usr/sbin/mkitab "rudder-agent:23456789:once:/usr/bin/startsrc -s rudder-agent"
    # No need to tell init to re-read /etc/inittab, it does it automatically every 60 seconds
  elif type chkconfig > /dev/null 2>/dev/null
  then
    chkconfig --add rudder-agent
    chkconfig rudder-agent on
  fi
  # old debian are packaged with a call to update-rc.d
else
  # Stop the service to make sure new binaries will be run (agent check will restart it)
  rudder agent stop >> ${LOG_FILE} || true
fi

# Make sure the configuration is available in a standard place
ln -sf "${CFE_DIR}/policy_server.dat" "/opt/rudder/etc/policy_server.dat"

# On AIX, trigger slibclean to remove any unused library/binary object from memory
# Will prevent "Text file busy" errors during the following copy
if type slibclean > /dev/null 2>&1; then
  slibclean >> ${LOG_FILE}
fi

# Ensure the modification date of the capability file is correct
# as it is used for cache invalidation in ncf lis-compatible-inputs
touch /opt/rudder/etc/agent-capabilities

# agent is disabled
if [ -f /opt/rudder/etc/disable-agent ]
then
  echo "********************************************************************************"
  echo "rudder-agent has been updated, but was not started as it is disabled."
  echo "To enable and start Rudder agent:"
  echo "# rudder agent enable -s"
  echo "********************************************************************************"
fi

# Try to send an inventory after upgrade to see the new agent version on the server
# We can do it a first install to since bootstrap policies won't send an inventory
echo "INFO: Scheduling an inventory during next run..." >> ${LOG_FILE}
touch /opt/rudder/etc/force_inventory

# Try to remove POSIX ACL if present, only during the first install
# https://issues.rudder.io/issues/8065
if [ "${CFRUDDER_FIRST_INSTALL}" = "true" ] && [ "$(uname -s)" != "SunOS" ]
then
  if type setfacl > /dev/null 2>&1; then
    setfacl -R -k /var/rudder/
  fi
fi

# launch rudder agent check script, it will generate an UUID on first install or repair it if needed
# If properly configured, this will run "agent reset" which will run "agent update" which will bootstrap then update ncf with cf-agent
if command -v "setsid" >/dev/null 2>&1; then
  # detach from process group otherwise dpkg may wait forever
  setsid ${RUDDER_CMD} agent check -f >> ${LOG_FILE} 2>&1
else
  nohup ${RUDDER_CMD} agent check -f >> ${LOG_FILE} 2>&1 &
fi

echo "$(date) - Ending rudder-agent post installation script" >> ${LOG_FILE}

# force exit otherwise the shell may be waiting for something
exit 0
