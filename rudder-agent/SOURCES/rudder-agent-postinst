#!/bin/sh
set -e

CFRUDDER_FIRST_INSTALL="$1"
CFRUDDER_OS="$2"
CFRUDDER_USE_SYSTEMD="$3"

CFE_DIR="/var/rudder/cfengine-community"
RUDDER_CMD="/opt/rudder/bin/rudder"
LOG_FILE="/var/log/rudder/install/rudder-agent.log"

if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]
then
  echo "Usage: $0 <CFRUDDER_FIRST_INSTALL> <CFRUDDER_OS> <CFRUDDER_USE_SYSTEMD>"
  echo " This should only be called from a package postinstall command"
  exit 1
fi

echo "`date` - Starting rudder-agent post installation script" >> ${LOG_FILE}

# setup the policy server if we are asked to
if [ -n "$4" ]
then
  echo "$4" > /var/rudder/cfengine-community/policy_server.dat
fi

# Do this at first install
if [ ${CFRUDDER_FIRST_INSTALL} -eq 1 ]
then
  # Set rudder-agent as service
  if [ ${CFRUDDER_OS} = "aix" ]
  then
    /usr/bin/mkssys -s rudder-agent -p "${CFE_DIR}/bin/cf-execd" -a "-F" -u root -S -n15 -f9 -R
    /usr/sbin/mkitab "rudder-agent:23456789:once:/usr/bin/startsrc -s rudder-agent"
    # No need to tell init to re-read /etc/inittab, it does it automatically every 60 seconds
  elif [ ${CFRUDDER_OS} != "deb" ] && [ "${CFRUDDER_USE_SYSTEMD}" != "true" ]
  then
    chkconfig --add rudder-agent
    chkconfig rudder-agent on
  elif [ "${CFRUDDER_USE_SYSTEMD}" = "true" ]
  then
    /bin/systemctl daemon-reload
    /bin/systemctl enable rudder-agent rudder-cf-execd rudder-cf-serverd
  fi
fi

# Summary of the flags usage:
# /var/rudder/tmp/migration-rudder-service-rename: rename rudder init script to rudder-server
# /var/rudder/tmp/migration-rudder-service-systemd: move rudder-agent from init to systemd
# /var/rudder/tmp/migration-rudder-service-enabled: rudder service was enabled
# /var/rudder/tmp/migration-rudder-service-enabled-server: rudder service was enabled (but managed by rudder-server-root postinst)
# /var/rudder/tmp/migration-rudder-cf-serverd-disabled: cf-serverd was disabled in /etc/default/rudder-agent


if [ -f /var/rudder/tmp/migration-rudder-service-rename ]
then
  # Rename only happens on non-systemd systems
  if type chkconfig > /dev/null 2>&1
  then
    chkconfig --add rudder-agent
  fi
 
  if [ -f /var/rudder/tmp/migration-rudder-service-enabled ]
  then
    if type chkconfig > /dev/null 2>&1
    then
      chkconfig --add rudder-agent
      chkconfig rudder-agent on
    fi

    if type update-rc.d > /dev/null 2>&1
    then
      update-rc.d rudder-agent enable
    fi
  fi
fi

if [ -f /var/rudder/tmp/migration-rudder-service-systemd ]
then
  # We are making the migration from sysv to systemd
  if type chkconfig > /dev/null 2>&1
  then
    chkconfig --del rudder-agent
  fi

  if type update-rc.d > /dev/null 2>&1
  then
    update-rc.d rudder-agent remove
  fi

  rm -f /etc/init.d/rudder-agent
  rm -f /etc/default/rudder-agent
  /bin/systemctl daemon-reload

  if [ -f /var/rudder/tmp/migration-rudder-service-enabled ]
  then
    /bin/systemctl enable rudder-agent rudder-cf-execd

    if [ -f /var/rudder/tmp/migration-rudder-cf-serverd-disabled ]
    then
      # Keep cf-serverd disabled
      /bin/true
    else
      /bin/systemctl enable rudder-cf-serverd
    fi
  fi
fi

# Remove the rudder service
if [ -f /etc/init.d/rudder ]
then
  if type chkconfig > /dev/null 2>&1
  then
    chkconfig --del rudder || true
  fi
  if type update-rc.d > /dev/null 2>&1
  then
    update-rc.d rudder remove
  fi
  rm -f /etc/init.d/rudder
fi

# Delete all flag files
rm -f /var/rudder/tmp/migration-rudder-service-rename
rm -f /var/rudder/tmp/migration-rudder-service-systemd
rm -f /var/rudder/tmp/migration-rudder-service-enabled
rm -f /var/rudder/tmp/migration-rudder-cf-serverd-disabled

# remove ldso.conf if it was installed by a previous version (starting from 4.3)
if [ -e /etc/ld.so.conf.d/rudder.conf ]
then
  rm /etc/ld.so.conf.d/rudder.conf
  ldconfig
fi

# Set a "lock" to avoid CFEngine being restarted during the upgrade process
I_SET_THE_LOCK=0
if [ ! -f /opt/rudder/etc/disable-agent ]; then
  I_SET_THE_LOCK=1
  ${RUDDER_CMD} agent disable
fi

# Make sure the configuration is available in a standard place
ln -sf "${CFE_DIR}/policy_server.dat" "/opt/rudder/etc/policy_server.dat"

# Make sure the daemons are stopped (if the daemon exists)
[ -x "${CFE_DIR}/bin/cf-execd" ] && ${RUDDER_CMD} agent stop || true

# On AIX, trigger slibclean to remove any unused library/binary object from memory
# Will prevent "Text file busy" errors during the following copy
if type slibclean >> ${LOG_FILE} 2>&1; then 
  slibclean
fi

# Copy CFEngine binaries (Changed location from sbin/ to bin/ in version 3.4)
cp -r -f /opt/rudder/bin/cf-* ${CFE_DIR}/bin/
cp -r -f /opt/rudder/bin/rpmvercmp ${CFE_DIR}/bin/
NB_COPIED_BINARIES=`ls -1 ${CFE_DIR}/bin/ | wc -l`
if [ ${NB_COPIED_BINARIES} -gt 0 ]; then
  echo "CFEngine binaries copied to workdir" >> ${LOG_FILE}
fi

# Backup rudder-server-roles.conf
if [ -f ${CFE_DIR}/inputs/rudder-server-roles.conf ]
then
  mkdir -p /var/backups/rudder
  cp -r ${CFE_DIR}/inputs/rudder-server-roles.conf /var/backups/rudder/
  RESTORE_SERVER_ROLES_BACKUP=1
fi

# Copy initial promises if there aren't any already or,
# if the cf-promises validation fails, it means we have a broken set of promises (possibly a pre-2.8 set).
# Reset the initial promises so the server is able to send the agent a new set of correct ones.
RUDDER_UUID=`cat /opt/rudder/etc/uuid.hive 2>>${LOG_FILE} || true`
if [ ! -f ${CFE_DIR}/inputs/promises.cf ] || ! ${CFE_DIR}/bin/cf-promises >> ${LOG_FILE} 2>&1 && [ "${RUDDER_UUID}" != "root" ]
then
  mkdir -p ${CFE_DIR}/inputs
  rm -rf ${CFE_DIR}/inputs/* || true
  cp -r /opt/rudder/share/initial-promises/* ${CFE_DIR}/inputs/
  mkdir -p /var/rudder/ncf/common
  rm -rf /var/rudder/ncf/common/*
  cp -r /opt/rudder/share/initial-ncf/* /var/rudder/ncf/common/
fi

# Restore rudder-server-roles.conf if necessary
if [ "${RESTORE_SERVER_ROLES_BACKUP}" = "1" ]; then
  cp -r /var/backups/rudder/rudder-server-roles.conf ${CFE_DIR}/inputs/rudder-server-roles.conf
fi

echo -n "INFO: Ensuring correct permissions on the keys directory..."
# The chmod is a workaround for the limitations of rpm in rhel6 but it could be useful in other situations
chmod 700 ${CFE_DIR}/ppkeys
echo " Done."

# Create a key if we don't have one yet
if [ ! -f ${CFE_DIR}/ppkeys/localhost.priv ]
then
  echo -n "INFO: Creating keys for CFEngine agent..."
  ${CFE_DIR}/bin/cf-key >> ${LOG_FILE} 2>&1
  echo " Done."
fi

# Remove cfengine lock log file : http://www.rudder-project.org/redmine/issues/5488
rm -f ${CFE_DIR}/cf3.*.runlog*

# Remove the lock on CFEngine
if [ ${I_SET_THE_LOCK} -eq 1 ]; then
  ${RUDDER_CMD} agent enable
fi

# Ensure the modification date of the capability file is correct
# as it is used for cache invalidation in ncf lis-compatible-inputs
touch /opt/rudder/etc/agent-capabilities

# Restart daemons if we stopped them, otherwise not
if [ ${CFRUDDER_FIRST_INSTALL} -ne 1 ]
then
  # Check if agent is disabled
  if [ ! -f /opt/rudder/etc/disable-agent ]
  then
    if [ -r ${CFE_DIR}/inputs/failsafe.cf -o -r ${CFE_DIR}/inputs/promises.cf ]
    then
      ${RUDDER_CMD} agent start || true
    fi
  else
    echo "********************************************************************************"
    echo "rudder-agent has been updated, but was not started as it is disabled."
    echo "To enable and start Rudder agent:"
    echo "# rudder agent enable -s"
    echo "********************************************************************************"
  fi
elif [ "${RUDDER_UUID}" != "root" ]
then
  echo "********************************************************************************"
  echo "rudder-agent has been installed (not started). This host can be a Rudder node."
  echo "To get started, configure your Rudder server's hostname and launch the agent:"
  echo "# echo 'rudder.server' > ${CFE_DIR}/policy_server.dat"
  echo "# rudder agent start"
  echo "This node will then appear in the Rudder web interface under 'Accept new nodes'."
  echo "********************************************************************************"
fi

# Add a default agent cron at first install
if [ ${CFRUDDER_FIRST_INSTALL} -eq 1 ]
then
  if [ `uname -s` != 'AIX' ]
  then
    echo "0,5,10,15,20,25,30,35,40,45,50,55 * * * * root ${RUDDER_CMD} agent check > /dev/null" > /etc/cron.d/rudder-agent
    chmod 644 /etc/cron.d/rudder-agent
  fi
fi

# Try to send an inventory after upgrade to see the new agent version on the server
if [ ${CFRUDDER_FIRST_INSTALL} -ne 1 ]
then
  echo "INFO: Scheduling an inventory during next run..."
  touch /opt/rudder/etc/force_inventory
fi

# Try to remove POSIX ACL if present, only during the first install
# http://www.rudder-project.org/redmine/issues/8065
if [ ${CFRUDDER_FIRST_INSTALL} -eq 1 ]
then
  if type setfacl >> ${LOG_FILE} 2>&1; then
    setfacl -R -k /var/rudder/
  fi
fi

# launch rudder agent check script, it will generate an UUID on first install or repair it if needed
nohup ${RUDDER_CMD} agent check >> ${LOG_FILE} 2>&1 &

