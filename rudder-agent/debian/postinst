#!/bin/sh
# postinst script for rudder-cfengine-community
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
	configure)

		echo "$(date) - Starting rudder-agent post installation script" >> /var/log/rudder/install/rudder-agent.log

		# Is this the first installation?
		CFRUDDER_FIRST_INSTALL=0
		if [ ! -x /var/rudder/cfengine-community/bin/cf-execd ]; then CFRUDDER_FIRST_INSTALL=1; fi

		# Reload the linker cache (to acknowledge LMDB's presence if needed)
		if [ -e /etc/ld.so.conf.d/rudder.conf ]; then
			echo "Found /etc/ld.so.conf.d/rudder.conf, running ldconfig" >> /var/log/rudder/install/rudder-agent.log
			ldconfig -v >> /var/log/rudder/install/rudder-agent.log 2>&1
		fi

		echo "Making sure that the permissions on the CFEngine key directory are correct..."
    if [ -d /var/rudder/cfengine-community/ppkeys ]; then
		chmod 700 /var/rudder/cfengine-community/ppkeys
		if [ `ls /var/rudder/cfengine-community/ppkeys | wc -l` -gt 0 ]; then
			chmod 600 /var/rudder/cfengine-community/ppkeys/*
		fi
    fi

		# Copy new binaries to workdir, make sure daemons are stopped first

		# Set a "lock" to avoid CFEngine being restarted during the upgrade process
		I_SET_THE_LOCK=0
		if [ ! -e /opt/rudder/etc/disable-agent ]; then
			I_SET_THE_LOCK=1
			touch /opt/rudder/etc/disable-agent
		fi

		if [ ${CFRUDDER_FIRST_INSTALL} -ne 1 -a -x /etc/init.d/rudder-agent ]; then /etc/init.d/rudder-agent stop || /etc/init.d/rudder-agent forcestop; fi

		# Copy CFEngine binaries (Changed location from sbin/ to bin/ in version 3.4)
		cp -a -f /opt/rudder/bin/cf-* /var/rudder/cfengine-community/bin/
		cp -a -f /opt/rudder/bin/rpmvercmp /var/rudder/cfengine-community/bin/
		NB_COPIED_BINARIES=`ls -1 /var/rudder/cfengine-community/bin/ | wc -l`
		if [ ${NB_COPIED_BINARIES} -gt 0 ];then echo "CFEngine binaries copied to workdir"; fi

		# Create a key if we don't have one yet
		if [ ! -f /var/rudder/cfengine-community/ppkeys/localhost.priv ]
		then
			echo -n "INFO: Creating keys for CFEngine agent..."
			/var/rudder/cfengine-community/bin/cf-key >> /var/log/rudder/install/rudder-agent.log 2>&1
			echo " Done."
		fi

		# Set up initial promises if necessary
    
		# Backup rudder-server-roles.conf
		if [ -e /var/rudder/cfengine-community/inputs/rudder-server-roles.conf ]
		then
			mkdir -p /var/backups/rudder
			cp -a /var/rudder/cfengine-community/inputs/rudder-server-roles.conf /var/backups/rudder/
			RESTORE_SERVER_ROLES_BACKUP=1
		fi

		if [ ! -e /var/rudder/cfengine-community/inputs/promises.cf ]
		then
			cp -r /opt/rudder/share/initial-promises/* /var/rudder/cfengine-community/inputs
		fi

		# If the cf-promises validation fails, it means we have a broken set of promises (possibly a pre-2.8 set).
		# Reset the initial promises so the server is able to send the agent a new set of correct ones.
		RUDDER_UUID=`cat /opt/rudder/etc/uuid.hive 2>/dev/null || true`
		if ! /var/rudder/cfengine-community/bin/cf-promises >/dev/null 2>&1 && [ "z${RUDDER_UUID}" != "zroot" ]
		then
			rsync --delete -aq /opt/rudder/share/initial-promises/ /var/rudder/cfengine-community/inputs/
		fi

		# Restore rudder-server-roles.conf if necessary
		if [ "z${RESTORE_SERVER_ROLES_BACKUP}" = "z1" ]; then
			cp -a /var/backups/rudder/rudder-server-roles.conf /var/rudder/cfengine-community/inputs/rudder-server-roles.conf
		fi

		# Migration to CFEngine 3.5: Correct a specific Technique that breaks the most recent CFEngine versions
		if [ -f /var/rudder/cfengine-community/inputs/distributePolicy/1.0/passwordCheck.cf ]
		then
			sed -i 's%^\(.*ALTER USER rudder WITH PASSWORD.*p.psql_password.*\)"",$%\1""%' /var/rudder/cfengine-community/inputs/distributePolicy/1.0/passwordCheck.cf
		fi

		# Remove the lock on CFEngine
		if [ ${I_SET_THE_LOCK} -eq 1 ]; then
			rm -f /opt/rudder/etc/disable-agent
		fi

		# Remove cfengine lock log file : http://www.rudder-project.org/redmine/issues/5488
		rm -f /var/rudder/cfengine-community/cf3.*.runlog*

		# Restart daemons if we stopped them, otherwise not
		if [ ${CFRUDDER_FIRST_INSTALL} -ne 1 ]
		then
			# Check if agent is disabled
			if [ ! -f /opt/rudder/etc/disable-agent ]
			then
				if [ -r /var/rudder/cfengine-community/inputs/failsafe.cf -o -r /var/rudder/cfengine-community/inputs/promises.cf ]
				then
					/etc/init.d/rudder-agent start
				fi
			else
				echo "********************************************************************************"
				echo "rudder-agent has been updated, but was not started as it is disabled."
				echo "To enable rudder agent, you have to remove disable file, and start rudder-agent:"
				echo "# rm -f /opt/rudder/etc/disable-agent"
				echo "# /etc/init.d/rudder-agent start"
				echo "********************************************************************************"
			fi
		else
			echo "********************************************************************************"
			echo "rudder-agent has been installed (not started). This host can be a Rudder node."
			echo "To get started, configure your Rudder server's hostname and launch the agent:"
			echo "# echo 'rudder.server' > /var/rudder/cfengine-community/policy_server.dat"
			echo "# /etc/init.d/rudder-agent start"
			echo "This node will then appear in the Rudder web interface under 'Accept new nodes'."
			echo "********************************************************************************"
		fi

		# Add temporary cron for checking UUID. This cron is created in postinst
		# in order to remove it later without complains of the package manager.
		CHECK_RUDDER_AGENT_CRON=`grep "/opt/rudder/bin/check-rudder-agent" /etc/cron.d/rudder-agent | wc -l`
		TMP_CRON=/etc/cron.d/rudder-agent-uuid
		# Add it only if the default cron file does not call check-rudder-agent script
		if [ ${CHECK_RUDDER_AGENT_CRON} -eq 0 ]; then
			if [ ! -f ${TMP_CRON} ]; then
				echo "0,5,10,15,20,25,30,35,40,45,50,55 * * * * root /opt/rudder/bin/check-rudder-agent" > ${TMP_CRON}
			fi
		fi

		# Vixie-cron and cronie (at least) expect specific permissions to be applied
		# on /etc/cron.d entries, and will refuse to load executable files.
		if [ -f ${TMP_CRON} ]; then
			chmod 644 ${TMP_CRON}
		fi

		# launch rudder agent check script, it will generate an UUID on first install or repair it if needed
		/opt/rudder/bin/check-rudder-agent

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
