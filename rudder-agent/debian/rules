#!/usr/bin/make -f
# -*- makefile -*-

# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

configure: configure-stamp
configure-stamp:
	dh_testdir
	# dh_prep has been moved from 'install' target since we need to build LMDB first
	dh_prep
	# Add here commands to configure the package.
	cd SOURCES && ./perl-prepare.sh $(CURDIR)/SOURCES/fusioninventory-agent
	# Compile the LMDB library and install it in /opt/rudder
	# LMDB source code does not know how to create destination folders, do it ourselves
	for i in bin lib include man/man1; do mkdir -p $(CURDIR)/debian/tmp/opt/rudder/$$i; done
	cd SOURCES/lmdb-source/libraries/liblmdb && make
	cd SOURCES/lmdb-source/libraries/liblmdb && make install prefix=/opt/rudder DESTDIR=$(CURDIR)/debian/tmp
	# If there is no configure, bootstrap with autogen.sh first
	cd SOURCES/cfengine-source && [ -x ./configure ] || NO_CONFIGURE=1 ./autogen.sh
	# Prepare CFEngine 3.6.x build with defined path of LMDB
	cd SOURCES/cfengine-source && ./configure --prefix=/opt/rudder --with-workdir=/var/rudder/cfengine-community --enable-static=yes --enable-shared=no --with-lmdb=$(CURDIR)/debian/tmp/opt/rudder

	touch configure-stamp

build: build-stamp

build-stamp: configure-stamp
	dh_testdir

	cd SOURCES/cfengine-source && make

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	if [ -f SOURCES/cfengine-source/Makefile ] ; then \
		cd SOURCES/cfengine-source && make clean ; \
	fi

	rm -rf $(CURDIR)/SOURCES/inputs

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_installdirs

	# Add here commands to install the package into debian/tmp
	cd SOURCES/cfengine-source && make install DESTDIR=$(CURDIR)/debian/tmp

	# Add the CFEngine man pages in debian/tmp
	mkdir -p $(CURDIR)/debian/tmp/opt/rudder/share/man/man8
	cd SOURCES/cfengine-source && for binary in cf-agent cf-promises cf-key cf-execd cf-serverd cf-monitord cf-runagent; do \
		LD_LIBRARY_PATH="$(CURDIR)/debian/tmp/opt/rudder/lib:$${LD_LIBRARY_PATH}" $${binary}/$${binary} -M | gzip > $(CURDIR)/debian/tmp/opt/rudder/share/man/man8/$${binary}.8.gz ; \
	done

# Build architecture-independent files here.
binary-indep: install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
	dh_install
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installmime
#	dh_python
	dh_installinit --update-rcd-params=disable --no-start -R # restart after upgrade (instead of stop, upgrade, start)
	dh_installinit --name=rudder --no-start -R # restart after upgrade (instead of stop, upgrade, start)
	# Install the profile.d file (PATH adjustment)
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ rudder-agent.sh /etc/profile.d
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/perl-custom/opt rudder /opt
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES run-inventory /opt/rudder/bin
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES initial-promises /opt/rudder/share
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/rudder-agent-utilities/bin rudder /opt/rudder/bin
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/rudder-agent-utilities/share commands /opt/rudder/share
	# Install an empty uuid.hive file before generating an uuid
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ uuid.hive /opt/rudder/etc/
	# Install /etc/ld.so.conf.d/rudder.conf in order to use libraries contain
	# in /opt/rudder/lib like LMDB
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ rudder.conf /etc/ld.so.conf.d
	# Install a verification script for cron
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ check-rudder-agent /opt/rudder/bin/
	# Install script to get local processes on VZ systems
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ vzps.py /opt/rudder/bin/
	# Install a script to run things in rudder's Perl environment
	dh_install --SOURCEDIR=$(CURDIR)/SOURCES/ rudder-perl /opt/rudder/bin/
	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	# LD_LIBRARY_PATH necessary to avoid libcrypto detection problems on old OSes like Ubuntu 10.04
	# Please see http://www.rudder-project.org/redmine/issues/6337 for details
	LD_LIBRARY_PATH="$(CURDIR)/debian/tmp/opt/rudder/lib:$${LD_LIBRARY_PATH}" dh_shlibdeps -- --ignore-missing-info
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
