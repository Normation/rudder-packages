#!/bin/sh
# postinst script for normation-openldap-framework
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
		invoke-rc.d rsyslog restart
  #Check if postgresql is started
  /etc/init.d/postgresql status > /dev/null
  if [ $? -ne 0 ]
  then
    /etc/init.d/postgresql start
  fi

  echo "Waiting postgresql to be up"
  CPT=0
  TIMEOUT=60
  while ! su - postgres -c "psql -q --output /dev/null -c \"SELECT COUNT(*) FROM pg_catalog.pg_authid\""
  do
    echo -n "."
    sleep 1
    CPT=$((${CPT}+1))
    if [ ${CPT} -eq ${TIMEOUT} ]
    then
      echo -e "\nConnection to PostgreSQL has not been established before timeout"
      echo "Exiting"
      exit 1
    fi
  done
  echo ""


  dbname="rudder"
  usrname="rudder"
  RES=$(su postgres -c "psql -t -c \"select count(1) from pg_catalog.pg_database where datname = '$dbname'\"")
  RES2=$(su postgres -c "psql -t -c \"select count(1) from pg_user where usename = '$usrname'\"")
  if [ $RES -ne 0 ]
  then
    echo "$dbname database alreadys exists - not creating"
  elif [ $RES2 -ne 0 ]
  then
    echo "Error: the database user $usrname exists but there is no associated database"
  else
    su postgres -c "psql -q -c \"CREATE USER rudder WITH PASSWORD 'Normation'\""
    su postgres -c "psql -q -c \"CREATE DATABASE rudder WITH OWNER = rudder\""
    echo "localhost:5432:rudder:rudder:Normation" > /root/.pgpass
    chmod 600 /root/.pgpass
    psql -q -U rudder -h localhost -d rudder -f /opt/rudder/etc/postgresql/reportsSchema.sql > /dev/null
  fi
   ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
